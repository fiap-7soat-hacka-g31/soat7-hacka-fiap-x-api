services:
  fiap-x-api:
    image: fiapburger/payments:latest
    build:
      context: ..
      args:
        target: 'fiap-x-api'
    restart: 'on-failure'
    environment:
      NODE_ENV: 'development'
      APP_NAME: 'FiapBurgerPayments'
      APP_DESCRIPTION: 'Payments Component for Fiap Burger'
      APP_VERSION: '1.0.0'
      PORT: '3000'
      LOG_LEVEL: 'debug'
      LOG_FORMAT: 'pretty' # pretty | json
      TRAFFIC_INSPECTION_HTTP: 'all' # inbound|outbound|all|none
      TRAFFIC_INSPECTION_AMQP: 'all' # inbound|outbound|all|none
      ROUTE_PREFIX: ''
      MONGO_URL: 'mongodb://fiapburger:fiapburger@mongodb:27017/FiapBurgerPayments?authSource=admin'
      AMQP_URL: 'amqp://fiapburger:fiapburger@rabbitmq:5672'
    command: sh -c "sleep 10 && npm run start:prod"
    ports:
      - 4000:3000
    depends_on: [mongodb, rabbitmq]
  mongodb:
    image: fiapburger/mongodbrs:6
    build:
      context: .
      dockerfile: ./Dockerfile.mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'fiapburger'
      MONGO_INITDB_ROOT_PASSWORD: 'fiapburger'
    command: 'mongod --replSet rs0 --keyFile /opt/.keyfile/keyfile --bind_ip_all'
    ports:
      - 27017:27017
  mongodb_init:
    image: mongo:6
    restart: 'on-failure'
    depends_on: [mongodb]
    command: >-
      sh -c "sleep 10 && mongosh -u fiapburger -p fiapburger --host mongodb:27017 --eval 'rs.initiate({
        \"_id\":\"rs0\",
        "members":[
          {
            \"_id\": 0,
            \"host\":\"mongodb:27017\",
          },
        ]
      })' && if [ $(mongosh -u fiapburger -p fiapburger --quiet --host mongodb:27017 --eval 'rs.status().ok') -eq 1 ]; then exit 0; else exit 1; fi"
  rabbitmq:
    image: fiapburger/rabbitmq:3-management-delayed
    build:
      context: .
      dockerfile: ./Dockerfile.rabbitmq
    # hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: 'fiapburger'
      RABBITMQ_DEFAULT_PASS: 'fiapburger'
    ports:
      - 5672:5672
      - 15672:15672
